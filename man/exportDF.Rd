% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/methods_export.r
\name{exportDF}
\alias{exportDF}
\title{Export data frame as HTML/TEX code}
\usage{
exportDF(x, tex = FALSE, colnames = NULL, width = NULL, align = NULL,
  beforeHead = NULL, afterHead = NULL, beforeCell = NULL,
  afterCell = NULL, lines = TRUE, indent = 2)
}
\arguments{
\item{x}{The data frame being exported.}

\item{tex}{Logical. Allows to switch between generation of TEX code and HTML.}

\item{colnames}{Displayed column names. If \code{NULL}, the original names
of \code{x} are used. Otherwise it must be a named vector with element
names corresponding to column names in \code{x}. It is OK to supply
alternative names for selected columns only.}

\item{width}{Either \code{NULL} (all columns get equal width) or a named
vector with element names corresponding to column names in \code{x}. If
\code{tex == TRUE}, values (between 0 and 1) are needed for columns with
align code 'p' only. They are interpreted as a multiplier for '\\textwidth'.
If \code{tex == FALSE}, values (between 0 and 100) should be
supplied for all columns of \code{x}.}

\item{align}{Either \code{NULL} (to use automatic alignment) or a named
vector with element names corresponding to column names in \code{x}.
If \code{tex == FALSE} valid alignment codes are 'left', 'right', 'center'.
If \code{tex == TRUE} valid alignment codes are 'l', 'r', 'c', and 'p'. For
columns with code 'p' a corresponding value of \code{width} should be set.
It is OK to supply alignment codes for selected columns only.}

\item{beforeHead}{Either \code{NULL} or a named character
vector with element names corresponding to column names in \code{x}.
The supplied strings (typically formatting command in the respective target
language, see examples) are inserted before the column names.
It is OK to supply such strings for selected columns only.}

\item{afterHead}{Lile \code{beforeHead} but these strings are inserted right
after the column names.}

\item{beforeCell}{Like \code{beforeHead} but for non-header cells.}

\item{afterCell}{Like \code{afterHead} but for non-header cells.}

\item{lines}{Logical. Switches table borders on/off.}

\item{indent}{Integer. Number of blanks used to indent the generated code.}
}
\value{
A character string (usually needs to be exported to a file).
}
\description{
Generates code to include tabular data in a tex document or web site.
}
\examples{
# Create example table
df= data.frame(stringsAsFactors=FALSE, name= c("growth", "dead"),
  unit= c("1/d","1/d"), expression= c("r * N * (1 - N/K)"," d * N"))

# Export as TEX: header in bold, 1st colum in italics, last column as math
tex= exportDF(df, tex=TRUE,
  colnames=c(expression="process rate expression"),
  width=c(expression=0.5),
  align=c(expression="p"),
  beforeHead=setNames(rep("\\\\textbf{",ncol(df)),names(df)),
  afterHead=setNames(rep("}",ncol(df)),names(df)),
  beforeCell=c(name="\\\\textit{",expression="$"),
  afterCell=c(name="}",expression="$")
)
cat(tex,"\\n")

# Export as HTML: non-standard colors are used for all columns
tf= tempfile(fileext=".html")
write(x= exportDF(df, tex=FALSE,
  beforeHead=setNames(rep("<font color='red'>",ncol(df)),names(df)),
  afterHead=setNames(rep("</font>",ncol(df)),names(df)),
  beforeCell=setNames(rep("<font color='blue'>",ncol(df)),names(df)),
  afterCell=setNames(rep("</font>",ncol(df)),names(df))
), file=tf)
\dontrun{
  browseURL(tf)
  file.remove(tf)
}
}
\author{
David Kneis \email{david.kneis@tu-dresden.de}
}
\seealso{
The \code{xtable} packages provides similar functionality with
  more sophisticated options. Consider the 'pandoc' software do convert
  documents from one markup language to another one. Finally, consider the
  latex package 'datatools' for direct inclusion of delimited text files
  (e.g. produced by \code{write.table}) in tex documents.
}

